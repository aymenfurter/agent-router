name: Python Tests

on:
  push:
    branches: [ main, develop ]
    paths: 
      - '**.py'
      - 'requirements*.txt'
      - 'pyproject.toml'
      - '.github/workflows/python-tests.yml'
  pull_request:
    branches: [ main, develop ]
    paths:
      - '**.py'
      - 'requirements*.txt'
      - 'pyproject.toml'
      - '.github/workflows/python-tests.yml'

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12"]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements-dev.txt
        # Install main dependencies without external Azure packages for testing
        pip install python-dotenv Flask==3.0.3 Werkzeug==3.0.4
    
    - name: Lint with flake8 (if available)
      run: |
        # Optional linting - install flake8 if not already available
        pip install flake8 || true
        # Stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics || true
        # Exit-zero treats all errors as warnings
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics || true
    
    - name: Test with pytest
      run: |
        python -m pytest tests/ -v --tb=short --cov-fail-under=80
      env:
        # Set test environment variables
        AZURE_AI_AGENT_ENDPOINT: "https://test.endpoint.com"
        MODEL_DEPLOYMENT_NAME: "test-model"
        PURVIEW_ENDPOINT: "https://test-purview.endpoint.com"
        BING_CONNECTION_ID: "test-bing-id"
        FABRIC_CONNECTION_ID: "test-fabric-id"
        ENABLE_FABRIC_AGENT: "true"
        DATABRICKS_INSTANCE: "test.databricks.com"
        GENIE_SPACE_ID: "test-space-id"
        DATABRICKS_AUTH_TOKEN: "test-token"
        FLASK_HOST: "0.0.0.0"
        FLASK_PORT: "5000"
        FLASK_DEBUG: "false"
    
    - name: Upload coverage reports to Codecov
      if: matrix.python-version == '3.12'
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage.xml
        flags: python
        name: python-${{ matrix.python-version }}
        fail_ci_if_error: false
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
    
    - name: Upload coverage HTML report
      if: matrix.python-version == '3.12' && (success() || failure())
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report-html
        path: htmlcov/
        retention-days: 30